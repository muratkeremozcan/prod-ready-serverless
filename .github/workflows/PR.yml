name: deploy to temp stack

on:
  pull_request:
  workflow_dispatch:

env:
  AWS_REGION: us-east-1

concurrency:
  group: ${{ github.head_ref || github.ref }}
  cancel-in-progress: true

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      branch_name: ${{ steps.branch-name.outputs.current_branch }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '18'
      - name: Install dependencies
        uses: cypress-io/github-action@v5.6.1
        with:
          runTests: false
      - name: Get branch name
        id: branch-name
        uses: tj-actions/branch-names@v6

  deploy:
    needs: setup
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: write
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '18'
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: us-east-1
          role-to-assume: arn:aws:iam::721520867440:role/GitHubActionsRole
          role-session-name: GithubActionsSession
      - name: get cached dependencies
        uses: cypress-io/github-action@v5.6.1
        with:
          runTests: false
      - name: deploy to ${{ needs.setup.outputs.branch_name }}
        run:
          npm run sls -- deploy -s ${{ needs.setup.outputs.branch_name }}
          --param="ssmStage=dev"
      - name: export env vars
        run:
          npm run sls export-env -- -s ${{ needs.setup.outputs.branch_name }}
          --all --param="ssmStage=dev"

  test-jest-cy:
    needs: [setup, deploy]
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: write
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '18'
      - name: get cached dependencies
        uses: cypress-io/github-action@v5.6.1
        with:
          runTests: false
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: us-east-1
          role-to-assume: arn:aws:iam::721520867440:role/GitHubActionsRole
          role-session-name: GithubActionsSession
      - name: jest e2e
        run: npm run test:e2e
      - name: Cypress e2e tests ðŸ§ª
        uses: cypress-io/github-action@v5.6.1
        with:
          browser: chrome
          install: false
          record: true
          group: e2e-tests
          tag: branch
        env:
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  schema-test-optic:
    needs: [setup, deploy]
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: write
      pull-requests: write
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '18'
      - name: get cached dependencies
        uses: cypress-io/github-action@v5.6.1
        with:
          runTests: false
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: us-east-1
          role-to-assume: arn:aws:iam::721520867440:role/GitHubActionsRole
          role-session-name: GithubActionsSession
      - name: verify the schema with Optic
        run: npm run optic:verify
      - uses: opticdev/action@v1
        with:
          optic_token: ${{ secrets.OPTIC_TOKEN }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          standards_fail: true
          additional_args: --generated --match openapi.yml
          compare_from_pr: cloud:default
          compare_from_push: cloud:default
        env:
          CI: true
